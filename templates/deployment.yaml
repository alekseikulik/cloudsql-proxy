apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
  annotations:
    checkov.io/skip1: CKV_K8S_10="CPU requests should be set" - Up to end user
    checkov.io/skip2: CKV_K8S_11="CPU limits should be set" - Up to end user
    checkov.io/skip3: CKV_K8S_12="Memory requests should be set" - Up to end user
    checkov.io/skip4: CKV_K8S_13="Memory limits should be set" - Up to end user
    checkov.io/skip5: CKV_K8S_15="Image Pull Policy should be Always" - Up to end user
    checkov.io/skip6: CKV_K8S_43="Image should use digest" - Up to end user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      containers:
      - name: cloud-sql-proxy
        image: {{ .Values.image.registry }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - "--address=0.0.0.0" #  Enable SQL proxy port on all interfaces
          - "{{ .Values.instanceConnectionName}}"
        securityContext:
          runAsNonRoot: true
        ports:
          - containerPort: {{ .Values.port }}
        env:
            # The port that the proxy should open to listen for database connections from the application
          - name: CSQL_PROXY_PORT
            value: "{{ .Values.port }}"
            # If connecting from a VPC-native GKE cluster, you can use the following flag to have the proxy connect over private IP
          - name: CSQL_PROXY_PRIVATE_IP
            value: "true"
          - name: CSQL_PROXY_HEALTH_CHECK
            value: "true"
          - name: CSQL_PROXY_HTTP_PORT
            value: "9801"
          - name: CSQL_PROXY_HTTP_ADDRESS
            value: "0.0.0.0"
            # Enable structured logging with LogEntry format
          - name: CSQL_PROXY_STRUCTURED_LOGS
            value: "true"
            # Configure the proxy to exit gracefully when sent a k8s configuration file.
          - name: CSQL_PROXY_EXIT_ZERO_ON_SIGTERM
            value: "true"
        startupProbe: # https://github.com/GoogleCloudPlatform/cloud-sql-proxy/tree/main/examples/k8s-health-check
          httpGet:
              path: /startup
              port: 9801
          periodSeconds: 1
          timeoutSeconds: 5
          failureThreshold: 20
        livenessProbe: # https://github.com/GoogleCloudPlatform/cloud-sql-proxy/tree/main/examples/k8s-health-check
          httpGet:
              path: /liveness
              port: 9801
          initialDelaySeconds: 0
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 5
